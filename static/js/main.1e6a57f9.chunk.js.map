{"version":3,"sources":["assets/styles/simpleModalStyles.js","components/SimpleModal.js","components/EditUser.js","utils/endpoints.js","assets/styles/loading.js","components/Loading.js","components/class/UsersList.js","utils/hooks.js","components/functional/UsersList.js","App.js","serviceWorker.js","index.js"],"names":["simpleModalStyles","modalPaper","position","width","backgroundColor","boxShadow","textAlign","padding","outline","top","left","transform","textField","marginLeft","marginRight","button","margin","withStyles","props","classes","handleClose","isOpen","ChildrenComponent","children","rest","Modal","aria-labelledby","aria-describedby","open","onClose","className","handleFiledChange","updateUser","user","Typography","variant","id","TextField","value","login","onChange","error","label","name","type","Button","color","onClick","getUsers","params","fetch","page","perPage","headers","Accept","then","response","json","StyledLoading","styled","div","Loading","CircularProgress","UsersList","state","users","loading","getUsersFromServer","setState","catch","handleEditClick","handleDeleteClick","newUsers","filter","item","e","target","map","this","Paper","root","Table","table","TableHead","TableRow","TableCell","align","TableBody","key","component","scope","Avatar","alt","src","avatar_url","avatar","IconButton","aria-label","EditUser","React","Component","marginTop","overflowX","minWidth","useFetchUsers","useState","setLoading","setError","fetchUsers","a","res","prev","useEffect","setIsOPen","setUser","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.1e6a57f9.chunk.js","sourcesContent":["const simpleModalStyles = () => ({\r\n    modalPaper:  {\r\n        position: 'absolute',\r\n        width: 500,\r\n        backgroundColor: '#fff',\r\n        boxShadow: 3,\r\n        textAlign: 'center',\r\n        padding: 20,\r\n        outline: 'none',\r\n        top: `50%`,\r\n        left: `50%`,\r\n        transform: `translate(-50%, -50%)`,\r\n    },\r\n    textField: {\r\n        marginLeft: 10,\r\n        marginRight: 10,\r\n        width: 250,\r\n    },\r\n    button: {\r\n        margin: 10,\r\n    }\r\n});\r\n\r\nexport default simpleModalStyles\r\n","import React from \"react\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport simpleModalStyles from \"../assets/styles/simpleModalStyles\";\r\n\r\nconst SimpleModal = function (props) {\r\n    const { classes, handleClose, isOpen, children: ChildrenComponent, ...rest } = props;\r\n\r\n    return (\r\n        <Modal\r\n            aria-labelledby=\"simple-modal-title\"\r\n            aria-describedby=\"simple-modal-description\"\r\n            open={isOpen}\r\n            onClose={handleClose}\r\n        >\r\n            <div className={classes.modalPaper}>\r\n                <ChildrenComponent {...rest}/>\r\n            </div>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default withStyles(simpleModalStyles)(SimpleModal)\r\n","import { withStyles } from '@material-ui/core/styles';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport React from \"react\";\r\n\r\nconst styles = () => ({\r\n    textField: {\r\n        marginLeft: 10,\r\n        marginRight: 10,\r\n        width: 250,\r\n    },\r\n    button: {\r\n        margin: 10,\r\n    }\r\n});\r\n\r\nconst EditUser = function ({ classes, handleClose, handleFiledChange, updateUser, user }) {\r\n    return (\r\n        <>\r\n            <Typography variant=\"h6\" id=\"modal-title\">\r\n                Edit user\r\n            </Typography>\r\n            <TextField\r\n                value={user.login}\r\n                onChange={handleFiledChange}\r\n                error={!user.login}\r\n                id=\"login\"\r\n                label=\"Login\"\r\n                className={classes.textField}\r\n                margin=\"normal\"\r\n                name=\"login\"\r\n            />\r\n            <TextField\r\n                value={user.type}\r\n                onChange={handleFiledChange}\r\n                id=\"login\"\r\n                label=\"Type\"\r\n                className={classes.textField}\r\n                margin=\"normal\"\r\n                name=\"type\"\r\n            />\r\n            <div>\r\n                <Button variant=\"outlined\"\r\n                        color=\"primary\"\r\n                        className={classes.button}\r\n                        onClick={updateUser}>\r\n                    Update\r\n                </Button>\r\n                <Button variant=\"outlined\"\r\n                        color=\"secondary\"\r\n                        className={classes.button}\r\n                        onClick={handleClose}>\r\n                    Cancel\r\n                </Button>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default withStyles(styles)(EditUser)\r\n","export const getUsers = (params) => fetch(`https://api.github.com/users?page=${params.page}&per_page=${params.perPage}`, {\r\n    headers: {\r\n        Accept: 'application/json',\r\n    },\r\n}).then((response) => response.json())\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledLoading = styled.div `\r\n    margin: 50vh auto;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n","import React from \"react\";\r\nimport { StyledLoading } from \"../assets/styles/loading\"\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst Loading = function () {\r\n    return (\r\n        <StyledLoading>\r\n            <CircularProgress />\r\n        </StyledLoading>\r\n    )\r\n};\r\n\r\nexport default Loading;\r\n","import React from \"react\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport SimpleModal from \"../SimpleModal\";\r\nimport EditUser from \"../EditUser\";\r\nimport { getUsers } from \"../../utils/endpoints\";\r\nimport Loading from \"../Loading\";\r\n\r\nconst styles = () => ({\r\n    root: {\r\n        marginTop: 3,\r\n        padding: 40,\r\n        overflowX: 'auto',\r\n    },\r\n    table: {\r\n        minWidth: 700,\r\n    },\r\n    avatar: {\r\n        margin: 10,\r\n    }\r\n});\r\n\r\nclass UsersList extends React.Component {\r\n    state = {\r\n        users: [\r\n            // { id: 1, avatar_url: 'https://avatars0.githubusercontent.com/u/1?v=4',\tlogin: 'mojombo' },\r\n            // { id: 2, avatar_url: 'https://avatars0.githubusercontent.com/u/2?v=4',\tlogin: 'defunkt' }\r\n        ],\r\n        user: {},\r\n        params: {\r\n            perPage: 10,\r\n            page: 1,\r\n        },\r\n        isOpen: false,\r\n        loading: false,\r\n        error: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getUsersFromServer()\r\n    }\r\n\r\n    getUsersFromServer = () => {\r\n        this.setState({ loading: true });\r\n        getUsers(this.state.params)\r\n            .then((users) => {\r\n                this.setState({ users })\r\n            })\r\n            .catch(() => {\r\n                this.setState({ error: true })\r\n            });\r\n        this.setState({ loading: false })\r\n    };\r\n\r\n    handleEditClick = (user) => {\r\n        this.setState({ isOpen: true, user })\r\n    };\r\n\r\n    handleDeleteClick = (user) => {\r\n        let newUsers = this.state.users.filter(item => item.id !== user.id);\r\n        this.setState({ users: newUsers });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ isOpen: false, user: {} })\r\n    };\r\n\r\n    handleFiledChange = (e) => {\r\n        let { name, value } = e.target;\r\n        this.setState({ user: { ...this.state.user, [name]: value } })\r\n    };\r\n\r\n    updateUser = () => {\r\n        const { user, users } = this.state;\r\n        if (!user.login) return;\r\n        let newUsers = users.map(item => item.id === user.id ? user : item);\r\n        this.setState({\r\n            users: newUsers,\r\n            isOpen: false, user: {}\r\n        });\r\n    };\r\n\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { users, isOpen, user, loading, error } = this.state;\r\n\r\n        if (error) return (<div>Something went wrong.</div>);\r\n\r\n        if (loading) return (<Loading />);\r\n\r\n        return (\r\n            <Paper className={classes.root}>\r\n                <Table className={classes.table}>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>User avatar</TableCell>\r\n                            <TableCell>Login</TableCell>\r\n                            <TableCell>Type</TableCell>\r\n                            <TableCell align=\"right\">Edit</TableCell>\r\n                            <TableCell align=\"right\">Delete</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {users.map(user => (\r\n                            <TableRow key={user.id}>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    <Avatar alt=\"Remy Sharp\"\r\n                                            src={user.avatar_url}\r\n                                            className={classes.avatar} />\r\n                                </TableCell>\r\n                                <TableCell>{user.login}</TableCell>\r\n                                <TableCell>{user.type}</TableCell>\r\n                                <TableCell align=\"right\">\r\n                                    <IconButton aria-label=\"Delete\"\r\n                                                onClick={() => this.handleEditClick(user)}>\r\n                                        <EditIcon />\r\n                                    </IconButton>\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">\r\n                                    <IconButton aria-label=\"Delete\"\r\n                                                onClick={() => this.handleDeleteClick(user)}>\r\n                                        <DeleteIcon />\r\n                                    </IconButton>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n                <SimpleModal\r\n                    children={EditUser}\r\n                    handleClose={this.handleClose}\r\n                    handleFiledChange={this.handleFiledChange}\r\n                    updateUser={this.updateUser}\r\n                    isOpen={isOpen}\r\n                    user={user} />\r\n            </Paper>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(UsersList)\r\n","import {useState, useEffect} from 'react';\r\nimport { getUsers } from \"./endpoints\";\r\n\r\nconst useFetchUsers = () => {\r\n    const [state, setState] = useState({ users: [], page: 0, perPage: 10 });\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(false);\r\n\r\n    const fetchUsers = async () => {\r\n        setLoading(true);\r\n        setError(false);\r\n\r\n        try {\r\n            const res = await getUsers({ page: state.page, perPage: state.perPage });\r\n            setState(prev => ({\r\n                ...prev,\r\n                users: res\r\n            }));\r\n        } catch (e) {\r\n            setError(true)\r\n        }\r\n        setLoading(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchUsers();\r\n    }, []);\r\n\r\n    return [{state, loading, error}, setState];\r\n};\r\n\r\nexport default useFetchUsers\r\n","import Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport SimpleModal from \"../SimpleModal\";\r\nimport EditUser from \"../EditUser\";\r\nimport React, { useState }from 'react';\r\nimport useFetchUsers from \"../../utils/hooks\";\r\nimport Loading from \"../Loading\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst styles = () => ({\r\n    root: {\r\n        marginTop: 50,\r\n        padding: 40,\r\n        overflowX: 'auto',\r\n    },\r\n    table: {\r\n        minWidth: 700,\r\n    },\r\n    avatar: {\r\n        margin: 10,\r\n    }\r\n});\r\n\r\nconst UsersList = function (props) {\r\n    const { classes } = props;\r\n    const [isOpen, setIsOPen] = useState(false);\r\n    const [user, setUser] = useState({});\r\n    const [{ state, loading, error }, setState] = useFetchUsers();\r\n\r\n    const handleEditClick = (user) => {\r\n        setIsOPen(true);\r\n        setUser(user);\r\n    };\r\n\r\n    const handleDeleteClick = (user) => {\r\n        let newUsers = state.users.filter(item => item.id !== user.id);\r\n        setState({ ...state, users: newUsers })\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setIsOPen(false);\r\n        setUser({});\r\n    };\r\n\r\n    const handleFiledChange = (e) => {\r\n        let { name, value } = e.target;\r\n        setUser({ ...user, [name]: value });\r\n    };\r\n\r\n    const updateUser = () => {\r\n        const { users } = state;\r\n        if (!user.login) return;\r\n        let newUsers = users.map(item => item.id === user.id ? user : item);\r\n        setState({ ...state, users: newUsers});\r\n        setIsOPen(false)\r\n    };\r\n\r\n    if (error) return (<div>Something went wrong.</div>);\r\n\r\n    if (loading) return (<Loading />);\r\n\r\n    return (\r\n        <Paper className={classes.root}>\r\n            <Table className={classes.table}>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>User avatar</TableCell>\r\n                        <TableCell>Login</TableCell>\r\n                        <TableCell>Type</TableCell>\r\n                        <TableCell align=\"right\">Edit</TableCell>\r\n                        <TableCell align=\"right\">Delete</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {state.users.map(user => (\r\n                        <TableRow key={user.id}>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                                <Avatar alt=\"Remy Sharp\"\r\n                                        src={user.avatar_url}\r\n                                        className={classes.avatar} />\r\n                            </TableCell>\r\n                            <TableCell>{user.login}</TableCell>\r\n                            <TableCell>{user.type}</TableCell>\r\n                            <TableCell align=\"right\">\r\n                                <IconButton aria-label=\"Delete\"\r\n                                            onClick={() => handleEditClick(user)}>\r\n                                    <EditIcon />\r\n                                </IconButton>\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">\r\n                                <IconButton aria-label=\"Delete\"\r\n                                            onClick={() => handleDeleteClick(user)}>\r\n                                    <DeleteIcon />\r\n                                </IconButton>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n            <SimpleModal\r\n                children={EditUser}\r\n                handleClose={handleClose}\r\n                handleFiledChange={handleFiledChange}\r\n                updateUser={updateUser}\r\n                isOpen={isOpen}\r\n                user={user} />\r\n        </Paper>\r\n    )\r\n};\r\n\r\nexport default withStyles(styles)(UsersList)\r\n","import React from 'react';\nimport './App.css';\nimport UsersList from \"./components/class/UsersList\";\nimport UsersListFunctional from\"./components/functional/UsersList\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <UsersList />\n      <UsersListFunctional />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}